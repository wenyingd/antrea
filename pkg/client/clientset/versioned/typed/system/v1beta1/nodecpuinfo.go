// Copyright 2023 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1beta1 "antrea.io/antrea/pkg/apis/system/v1beta1"
	scheme "antrea.io/antrea/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// NodeCPUInfosGetter has a method to return a NodeCPUInfoInterface.
// A group's client should implement this interface.
type NodeCPUInfosGetter interface {
	NodeCPUInfos() NodeCPUInfoInterface
}

// NodeCPUInfoInterface has methods to work with NodeCPUInfo resources.
type NodeCPUInfoInterface interface {
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.NodeCPUInfo, error)
	NodeCPUInfoExpansion
}

// nodeCPUInfos implements NodeCPUInfoInterface
type nodeCPUInfos struct {
	client rest.Interface
}

// newNodeCPUInfos returns a NodeCPUInfos
func newNodeCPUInfos(c *SystemV1beta1Client) *nodeCPUInfos {
	return &nodeCPUInfos{
		client: c.RESTClient(),
	}
}

// Get takes name of the nodeCPUInfo, and returns the corresponding nodeCPUInfo object, and an error if there is any.
func (c *nodeCPUInfos) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1beta1.NodeCPUInfo, err error) {
	result = &v1beta1.NodeCPUInfo{}
	err = c.client.Get().
		Resource("nodecpuinfos").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do(ctx).
		Into(result)
	return
}
