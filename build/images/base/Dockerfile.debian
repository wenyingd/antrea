# Copyright 2022 Antrea Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BUILD_TAG
ARG CNI_BINARIES_VERSION

FROM antrea/cni-binaries:${CNI_BINARIES_VERSION} as cni-binaries

FROM antrea/openvswitch-debian:${BUILD_TAG}

ARG INSTALL_SURICATA_FROM_PACKAGE=false

LABEL maintainer="Antrea <projectantrea-dev@googlegroups.com>"
LABEL description="An Debian based Docker base image for Antrea."

COPY iptables-wrapper-installer.sh /iptables-wrapper-installer.sh
COPY suricata*.deb /tmp/

RUN echo "deb http://build-artifactory.eng.vmware.com/debian-remote bullseye main" > /etc/apt/sources.list && \
    echo "deb http://build-artifactory.eng.vmware.com/debian-remote bullseye-updates main" >> /etc/apt/sources.list && \
    echo "deb http://build-artifactory.eng.vmware.com/debian-security-remote bullseye-security main" >> /etc/apt/sources.list

USER root

RUN apt-get update && apt-get install -y --no-install-recommends \
    ipset \
    jq \
    wget \
    iproute2 \
    ca-certificates \
    ethtool \
    inotify-tools && \
    if ${INSTALL_SURICATA_FROM_PACKAGE}; then \
        apt-get install -y --no-install-recommends /tmp/suricata*.deb && \
        apt-mark hold suricata; \
    else \
        echo "deb http://build-artifactory.eng.vmware.com/debian-remote bullseye-backports main" >> /etc/apt/sources.list.d/backports.list && \
        apt update && \
        apt-get install -y --no-install-recommends suricata; \
    fi && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/* && \
    /iptables-wrapper-installer.sh

COPY --from=cni-binaries /opt/cni/bin /opt/cni/bin
